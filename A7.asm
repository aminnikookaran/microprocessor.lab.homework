        DSEG  	 	AT      30H
        RIND:	 	DS      1
        CIND: 		DS      1
        RRI:	 	DS      1
        RCI: 		DS      1
        RRI1: 		DS      1
        RCI1:	 	DS      1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	SEVSEL		EQU	0FFC8H
	SEVDATA		EQU	0FFC9H
	PORTA		EQU	0FFD0H
	PORTB		EQU	0FFD1H
	PORTC		EQU	0FFD2H
	CONTROL		EQU	0FFD3H

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG    AT      0000H

	; initialize
	MOV	DPTR,#CONTROL
	MOV	A,#9AH
	MOVX	@DPTR,A
	
	; SELECT SEVEN SEGMENT
	MOV	A,#11111110B
	CALL	SETSS

LOOP:
	CALL 	SCAN

	MOV	A,RRI
	MOV	RRI1,A
	MOV	A,RCI
	MOV	RCI1,A

	; Delay 30 Miliseconds
	CALL	DELAY

	CALL 	SCAN

	; Check for equality
	MOV	A,RRI1
	CLR	C
	SUBB	A,RRI
	JNZ	LOOP
	MOV	A,RCI1
	CLR	C
	SUBB	A,RCI
	JNZ	LOOP

	;CALL	WAIT_RELEASE

	; Compute RIND & cIND
 	CALL	DECODE1

	; Compute N = 4*RIND + CIND
	MOV	A,RIND
	ADD	A,RIND
	ADD	A,RIND
	ADD	A,RIND
	ADD	A,CIND

	; DECODE N
	CALL	DECODE

	; SHOW N
	CALL	SETSD

	JMP	LOOP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

WAIT_RELEASE:
	
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SCAN:

LB00:
	; Sets PC0
	MOV	DPTR,#PORTC
	MOV	A,#11111110B
	MOVX	@DPTR,A
	MOV	RRI,#00001110B

	; Read PCH and place in R0
	MOVX	A,@DPTR
	ANL	A,#11110000B
	MOV	R0,A

		MOV	A,R0
		CLR	C
		SUBB	A,#11100000B
		JNZ	LB01
		MOV	RCI,#00001110B
		LJMP	LB_END
LB01:
		MOV	A,R0
		CLR	C
		SUBB	A,#11010000B
		JNZ	LB02
		MOV	RCI,#00001101B
		LJMP	LB_END
LB02:
		MOV	A,R0
		CLR	C
		SUBB	A,#10110000B
		JNZ	LB03
		MOV	RCI,#00001011B
		LJMP	LB_END
LB03:
		MOV	A,R0
		CLR	C
		SUBB	A,#01110000B
		JNZ	LB10
		MOV	RCI,#00000111B
		LJMP	LB_END
LB10:
	; Sets PC1
	MOV	DPTR,#PORTC
	MOV	A,#11111101B
	MOVX	@DPTR,A
	MOV	RRI,#00001101B

	; Read PCH and place in R0
	MOVX	A,@DPTR
	ANL	A,#11110000B
	MOV	R0,A

		MOV	A,R0
		CLR	C
		SUBB	A,#11100000B
		JNZ	LB11
		MOV	RCI,#00001110B
		LJMP	LB_END
LB11:
		MOV	A,R0
		CLR	C
		SUBB	A,#11010000B
		JNZ	LB12
		MOV	RCI,#00001101B
		LJMP	LB_END
LB12:
		MOV	A,R0
		CLR	C
		SUBB	A,#10110000B
		JNZ	LB13
		MOV	RCI,#00001011B
		LJMP	LB_END
LB13:
		MOV	A,R0
		CLR	C
		SUBB	A,#01110000B
		JNZ	LB20
		MOV	RCI,#00000111B
		LJMP	LB_END
LB20:
	; Sets PC2
	MOV	DPTR,#PORTC
	MOV	A,#11111011B
	MOVX	@DPTR,A
	MOV	RRI,#00001011B

	; Read PCH and place in R0
	MOVX	A,@DPTR
	ANL	A,#11110000B
	MOV	R0,A

		MOV	A,R0
		CLR	C
		SUBB	A,#11100000B
		JNZ	LB21
		MOV	RCI,#00001110B
		LJMP	LB_END
LB21:
		MOV	A,R0
		CLR	C
		SUBB	A,#11010000B
		JNZ	LB22
		MOV	RCI,#00001101B
		LJMP	LB_END
LB22:
		MOV	A,R0
		CLR	C
		SUBB	A,#10110000B
		JNZ	LB23
		MOV	RCI,#00001011B
		LJMP	LB_END
LB23:
		MOV	A,R0
		CLR	C
		SUBB	A,#01110000B
		JNZ	LB30
		MOV	RCI,#00000111B
		LJMP	LB_END
LB30:
	; Sets PC3
	MOV	DPTR,#PORTC
	MOV	A,#11110111B
	MOVX	@DPTR,A
	MOV	RRI,#00000111B

	; Read PCH and place in R0
	MOVX	A,@DPTR
	ANL	A,#11110000B
	MOV	R0,A

		MOV	A,R0
		CLR	C
		SUBB	A,#11100000B
		JNZ	LB31
		MOV	RCI,#00001110B
		LJMP	LB_END
LB31:
		MOV	A,R0
		CLR	C
		SUBB	A,#11010000B
		JNZ	LB32
		MOV	RCI,#00001101B
		LJMP	LB_END
LB32:
		MOV	A,R0
		CLR	C
		SUBB	A,#10110000B
		JNZ	LB33
		MOV	RCI,#00001011B
		LJMP	LB_END
LB33:
		MOV	A,R0
		CLR	C
		SUBB	A,#01110000B
		JNZ	LB_BACK
		MOV	RCI,#00000111B
		LJMP	LB_END
LB_BACK:	LJMP	LB00
LB_END:
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SETSS:	; Set SEVSEL
	MOV	DPTR,#SEVSEL
	MOVX	@DPTR,A
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SETSD:	; Set SEVDATA
	MOV	DPTR,#SEVDATA
	MOVX	@DPTR,A
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DELAY:	MOV 	R5,#1
L1:	MOV	R6,#3
L2:	MOV	R7,#200
L3:	NOP
	NOP
	DJNZ	R7,L3
	DJNZ	R6,L2
	DJNZ	R5,L1
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DECODE:
	MOV	DPTR,#TABLE
	MOVC	A,@A+DPTR
	RET

TABLE:	DB	3FH
	DB	06H
	DB	5BH
	DB	4FH
	DB	66H
	DB	6DH
	DB	7DH
	DB	07H
	DB	7FH
	DB	6FH
	DB	77H
	DB	7CH
	DB	39H
	DB	5EH
	DB	79H
	DB	71H	

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DECODE1:
	MOV	A,RRI
	CLR	C
	SUBB	A,#00001110B
	JNZ	LL1
	MOV	RIND,#00H
	LJMP	LL_END
LL1:
	MOV	A,RRI
	CLR	C
	SUBB	A,#00001101B
	JNZ	LL2
	MOV	RIND,#01H
	LJMP	LL_END	
LL2:
	MOV	A,RRI
	CLR	C
	SUBB	A,#00001011B
	JNZ	LL3
	MOV	RIND,#02H
	LJMP	LL_END	
LL3:
	MOV	A,RRI
	CLR	C
	SUBB	A,#00000111B
	JNZ	LL_END
	MOV	RIND,#03H
	LJMP	LL_END	
LL_END:
	MOV	A,RCI
	CLR	C
	SUBB	A,#00001110B
	JNZ	LLL1
	MOV	CIND,#00H
	LJMP	LL_END0
LLL1:
	MOV	A,RCI
	CLR	C
	SUBB	A,#00001101B
	JNZ	LLL2
	MOV	CIND,#01H
	LJMP	LL_END0
LLL2:
	MOV	A,RCI
	CLR	C
	SUBB	A,#00001011B
	JNZ	LLL3
	MOV	CIND,#02H
	LJMP	LL_END0
LLL3:
	MOV	A,RCI
	CLR	C
	SUBB	A,#00000111B
	JNZ	LL_END0
	MOV	CIND,#03H
	LJMP	LL_END0
LL_END0:
	RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

END
